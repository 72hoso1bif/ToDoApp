name: CI/CD ToDo App

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  test: 
    name: Backend - Units & Integrations
    runs-on: ubuntu-18.04
    
    services:
      # Label used to access the service container
      db:
        # Docker Hub image
        image: postgres:13.1-alpine
        # Provide the password for postgres 
        env:
          POSTGRES_USER: compose_postgres
          POSTGRES_PASSWORD: compose_postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
    
    steps:
      - uses: actions/checkout@v1   
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11.x
      - name: Maven Verify
        run: mvn -B clean verify
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/compose-postgres
          SPRING_DATASOURCE_USERNAME: compose-postgres
          SPRING_DATASOURCE_PASSWORD: compose-postgres
          SPRING_JPA_HIBERNATE_DDL_AUTO: update
  build: 
    name: Frontend Build and Test 
    runs-on: ubuntu-latest 
    steps: 
    - name: Checkout 
      uses: actions/checkout@v2 
    - name: Use Node 12.x 
      uses: actions/setup-node@v1 
      with: 
        node-version: '12.x' 
    - name: Install dependencies 
      run: npm ci
    - name: Build
      run: npm run ci:frontend:build 
    - name: Test 
      run: npm run ci:frontend:test
